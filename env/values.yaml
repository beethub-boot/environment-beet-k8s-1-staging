PipelineSecrets: {}
api:
  env:
    CLIENT_ID: api-beet
    REALM: beet-staging
    SERVER_URL: https://keycloak.trn.beethub.com.mx/auth/
beet:
  env:
    BACKEND_URL: https://api.trn.beethub.com.mx/graphql
    KEYCLOAK_CLIENT_ID: beet
    KEYCLOAK_REALM: beet-staging
    KEYCLOAK_URL: https://keycloak.trn.beethub.com.mx/auth/
cleanup:
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --cleanup
expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  Args:
  - --v
  - 4
  config:
    domain: trn.beethub.com.mx
    exposer: Ingress
    http: "false"
    tlsSecretName: tls-trn-beethub-com-mx-p
    tlsacme: "true"
    urltemplate: '{{.Service}}.{{.Domain}}'
  production: true
file:
  env:
    NODE_ENV: STAGING
jenkins:
  Servers:
    Global: {}
keycloak-db:
  existingSecret: keycloak-db
  mysqlDatabase: keycloak
  mysqlUser: keycloak
  persistence:
    storageClass: do-block-storage
keycloak-s:
  keycloak:
    existingSecret: keycloak
    existingSecretKey: password
    extraEnv: |
      - name: JDBC_PARAMS
        value: useSSL=false
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
      enabled: true
      hosts:
      - keycloak.trn.beethub.com.mx
      path: /
      tls:
      - hosts:
        - keycloak.trn.beethub.com.mx
        secretName: tls-trn-beethub-com-mx-p
    persistence:
      dbHost: jx-keycloak-db
      dbName: keycloak
      dbPort: 3306
      dbVendor: mysql
      deployPostgres: false
      existingSecret: keycloak-db
      existingSecretPasswordKey: mysql-password
      existingSecretUsernameKey: mysql-user
prow: {}
